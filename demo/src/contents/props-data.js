// export const propsColumns = [
//   { key: 'name', name: '이름', align: 'left', col: 4 },
//   { key: 'description', name: '이름', align: 'left', col: 4 },
//   { key: 'default', name: '이름', align: 'left', col: 4 },
//   { key: 'required', name: '이름', align: 'left', col: 4 },
// ]

const globalProps = {
  brand: {
    name: 'brand',
    type: 'primary | secondary',
    description: '브랜드 색상 적용',
    default: '',
    required: false,
  },
  status: {
    name: 'status',
    type: 'status 참고',
    description: '상태별 색상 적용',
    default: '',
    required: false,
  },
  color: {
    name: 'color',
    type: 'colors 참고',
    description: '지정된 색상 적용',
    default: '',
    required: false,
  },
  round: {
    name: 'round',
    type: 'Boolean',
    description: '둥근 모서리 적용 여부 설정',
    default: 'false',
    required: false,
  },
  border: {
    name: 'border',
    type: 'Boolean',
    description: '테두리 적용 여부 설정',
    default: 'false',
    required: false,
  },
  fluid: {
    name: 'fluid',
    type: 'Boolean',
    description: '상위 영역에 width에 맞춤 여부 설정',
    default: 'false',
    required: false,
  },
  disabled: {
    name: 'disabled',
    type: 'Boolean',
    description: '비활성 여부 설정',
    default: 'false',
    required: false,
  },
  compact: {
    name: 'compact',
    type: 'Boolean',
    description: '최소 여백 컴포넌트 사용 설정',
    default: 'false',
    required: false,
  },
  align: {
    name: 'align',
    type: 'left | center | right',
    description: '컨텐츠 정렬 지정',
    default: 'left',
    required: false,
  },
  size: {
    name: 'size',
    type: 'tiny | small | medium | large | huge | massive',
    description: '기본 폰트 크기 기준 지정된 크기로 설정',
    default: '',
    required: false,
  },
}
export const buttonProps = [
  {
    name: 'contentsText',
    type: 'String',
    description: '버튼의 문자 내용.',
    default: '',
    required: false,
  },
  globalProps.brand,
  globalProps.status,
  globalProps.color,
  globalProps.border,
  globalProps.disabled,
  globalProps.fluid,
  globalProps.round,
  globalProps.compact,
  globalProps.size,
  {
    name: 'text',
    type: 'Boolean',
    description: '텍스트 버튼 지정 여부 설정',
    default: 'false',
    required: false,
  },
  {
    name: 'outline',
    type: 'Boolean',
    description: '아웃라인 버튼 사용 설정',
    default: 'false',
    required: false,
  },
  {
    name: 'icon',
    type: 'Boolean',
    description: '아이콘 버튼 사용 설정',
    default: 'false',
    required: false,
  },
  {
    name: 'withIcon',
    type: 'String',
    description: '컨텐츠의 좌우 아이콘 사용 설정 및 아이콘 지정',
    default: 'null',
    required: false,
  },
  {
    name: 'iconPos',
    type: 'left | right | both',
    description: '아이콘 적용 시 위치 지정( both: 양쪽 모두 적용 )',
    default: '',
    required: false,
  },
  {
    name: 'badge',
    type: 'String',
    description: '내부 뱃지 적용 및 뱃지 내용 지정',
    default: '',
    required: false,
  },
  {
    name: 'badgeOption',
    type: 'String',
    description: '뱃지에 적용 할 설정 ( 예> "red shadow")',
    default: '',
    required: false,
  },
]

export const buttonsProps = [
  {
    name: 'buttons',
    type: 'Array',
    description: '포함 될 버튼들의 배열 [{ option: BeButton의 props }]',
    default: '',
    required: true,
  },
  globalProps.round,
  globalProps.border,
]

export const inputProps = [
  {
    name: 'type',
    type: 'input | textarea',
    description: 'input 또는 textarea을 지정',
    default: 'input',
    required: false,
  },
  {
    name: 'inputType',
    type: 'text | number | ...',
    description: 'input의 기본 속성 지정',
    default: 'text',
    required: false,
  },
  globalProps.align,
  globalProps.status,
  {
    name: 'placeholder',
    type: 'String',
    description: 'placeholder 지정',
    default: '입력하세요',
    required: false,
  },
  {
    name: 'readonly',
    type: 'Boolean',
    description: 'input의 readonly 속성 지정',
    default: 'false',
    required: false,
  },
  {
    name: 'underline',
    type: 'Boolean',
    description: 'input 영역의 스타일에 underline 적용',
    default: 'false',
    required: false,
  },
  {
    name: 'transparent',
    type: 'Boolean',
    description: 'input 영역의 스타일에 transparent 적용',
    default: 'false',
    required: false,
  },
  globalProps.round,
  globalProps.compact,
  globalProps.fluid,
  globalProps.disabled,
  {
    name: 'iconLeft',
    type: 'String',
    description: 'input의 왼쪽 icon 적용 여부 및 아이콘 지정',
    default: 'null',
    required: false,
  },
  {
    name: 'iconLeft',
    type: 'String',
    description: 'input의 오른쪽 icon 적용 여부 및 아이콘 지정',
    default: 'null',
    required: false,
  },
  {
    name: 'clear',
    type: 'Boolean',
    description: 'input reset 버튼 기능 사용 설정',
    default: 'false',
    required: false,
  },
  {
    name: 'badge',
    type: 'String',
    description: '내부 뱃지 적용 및 뱃지 내용 지정',
    default: '',
    required: false,
  },
  {
    name: 'badgeOption',
    type: 'String',
    description: '뱃지에 적용 할 설정 ( 예> "red shadow")',
    default: '',
    required: false,
  },
  {
    name: 'edit',
    type: 'Boolean',
    description: 'input의 편집 모드 설정',
    default: 'false',
    required: false,
  },
  {
    name: 'editMode',
    type: 'Boolean',
    description: 'input의 초기 편집 모드 설정',
    default: 'false',
    required: false,
  },
  {
    name: 'unit',
    type: 'String',
    description: 'input의 단위 표시 설정 및 단위 지정',
    default: 'null',
    required: false,
  },
]
export const inputNumberProps = [
  globalProps.status,
  {
    name: 'placeholder',
    type: 'String',
    description: 'placeholder 지정',
    default: '',
    required: false,
  },
  {
    name: 'readonly',
    type: 'Boolean',
    description: 'input의 readonly 속성 지정',
    default: 'false',
    required: false,
  },
  globalProps.round,
  globalProps.compact,
  globalProps.fluid,
  globalProps.disabled,
  {
    name: 'iconLeft',
    type: 'String',
    description: 'input의 왼쪽 icon 적용 여부 및 아이콘 지정',
    default: 'null',
    required: false,
  },
  {
    name: 'iconLeft',
    type: 'String',
    description: 'input의 오른쪽 icon 적용 여부 및 아이콘 지정',
    default: 'null',
    required: false,
  },
  {
    name: 'step',
    type: 'Number',
    description: '증가/감소량을 지정',
    default: '1',
    required: false,
  },
  {
    name: 'controller',
    type: 'String',
    description: '증가/감소 버튼의 배치 위치 지정',
    default: 'between',
    required: false,
  },
  {
    name: 'min',
    type: 'Number',
    description: '최소값 지정',
    default: '',
    required: false,
  },
  {
    name: 'max',
    type: 'Number',
    description: '최대값 지정',
    default: '',
    required: false,
  },
  {
    name: 'incIcon',
    type: 'String',
    description: '증가 버튼 아이콘 지정',
    default: 'xi-plus',
    required: false,
  },
  {
    name: 'decIcon',
    type: 'String',
    description: '감소 버튼 아이콘 지정',
    default: 'xi-minus',
    required: false,
  },
]

export const checkboxProps = [
  {
    name: 'type',
    type: 'checkbox | radio',
    description: 'checkbox의 표시 타입을 지정',
    default: 'checkbox',
    required: false,
  },
  {
    name: 'name',
    type: 'String',
    description: 'checkbox(input) name 속성 지정',
    default: '',
    required: false,
  },
  {
    name: 'labelText',
    type: 'String',
    description: '<label></label> 컨텐츠 지정',
    default: '',
    required: false,
  },
  {
    name: 'indeter',
    type: 'Boolean',
    description: 'indeter 상태 지정',
    default: '',
    required: false,
  },
]
export const checkboxGroupProps = [
  {
    name: 'checkList',
    type: 'Array',
    description: '포함 될 checkbox의 배열 (["labelText", ...])',
    default: 'null',
    required: false,
  },
]
export const radioProps = [
  {
    name: 'optionList',
    type: 'Array',
    description: '포함 될 checkbox의 배열 (["labelText", ...])',
    default: 'null',
    required: false,
  },
  {
    name: 'selected',
    type: 'String',
    description: '선택 된 checkbox의 label 텍스트',
    default: 'null',
    required: false,
  },
]
export const switchProps = [
  {
    name: 'type',
    type: 'slider | button | button-slide',
    description: '스위치 스타일 타입 지정',
    default: 'slide',
    required: false,
  },
  {
    name: 'inside',
    type: 'Boolean',
    description: '스위치 슬라이드 스타일 지정',
    default: 'false',
    required: false,
  },
  globalProps.round,
  globalProps.color,
  {
    name: 'onText',
    type: 'String',
    description: '스위치 버튼 타입 에서 positive쪽 라벨 지정',
    default: 'ON',
    required: false,
  },
  {
    name: 'offText',
    type: 'String',
    description: '스위치 버튼 타입 에서 nagative쪽 라벨 지정',
    default: 'OFF',
    required: false,
  },
]
export const tagProps = [
  {
    name: 'type',
    type: 'label | line | dot',
    description: 'Tag 스타일 타입 지정',
    default: 'label',
    required: false,
  },
  {
    name: 'icon',
    type: 'String',
    description: 'IconTag 설정 및 아이콘 지정',
    default: 'null',
    required: false,
  },
  {
    name: 'iconPos',
    type: 'left | right',
    description: 'Tag 아이콘 위치 지정',
    default: 'null',
    required: false,
  },
  globalProps.round,
  globalProps.color,
  {
    name: 'light',
    type: 'Boolean',
    description: '색상 지정 시 light 색상 사용 설정',
    default: 'false',
    required: false,
  },
  {
    name: 'pointing',
    type: 'Boolean',
    description: 'Pointing Tag 사용 설정',
    default: 'false',
    required: false,
  },
  {
    name: 'pointingPos',
    type: 'up | bottom | left | right',
    description: 'Pointing Tag 사용 시 Tag의 위치 설정',
    default: 'up',
    required: false,
  },
]

export const badgeProps = [
  {
    name: 'content',
    type: 'String | Number',
    description: 'badge 내용 지정',
    default: 'false',
    required: false,
  },
  {
    name: 'mark',
    type: 'Boolean',
    description: 'badge mark 모드 지정',
    default: 'false',
    required: false,
  },
  {
    name: 'shadow',
    type: 'Boolean',
    description: 'badge의 그림지 표시 설정',
    default: 'false',
    required: false,
  },
  {
    name: 'align',
    type: 'left | center | right',
    description: 'badge가 상위 요소의 위치 관계를 설정',
    default: 'center',
    required: false,
  },
  globalProps.color,
]

export const messageProps = [
  {
    name: 'title',
    type: 'String',
    description: 'Message 제목 지정',
    default: '',
    required: false,
  },
  {
    name: 'contents',
    type: 'String',
    description: 'Message 내용 지정',
    default: '',
    required: false,
  },
  {
    name: 'icon',
    type: 'String',
    description: 'icon 사용 설정 및 아이콘 지정',
    default: '',
    required: false,
  },
  globalProps.status,
  globalProps.disabled,
  {
    name: 'selected',
    type: 'Boolean',
    description: 'Message 그룹 중 선택된 메세지 설정',
    default: 'false',
    required: false,
  },
]

export const rateProps = [
  {
    name: 'rateLength',
    type: 'Number',
    description: 'Rate 전체 수 설정',
    default: '5',
    required: false,
  },
  {
    name: 'useHalf',
    type: 'Boolean',
    description: '.5 값의 사용 설정',
    default: 'false',
    required: false,
  },
  {
    name: 'icon',
    type: 'String',
    description: 'Rate에 표시할 아이콘 지정',
    default: 'xi-star',
    required: false,
  },
  {
    name: 'resultValue',
    type: 'Number',
    description: 'Rate의 값 지정 및 결과 값',
    default: '0',
    required: false,
  },
  globalProps.size,
  globalProps.color,
  globalProps.disabled,
  {
    name: 'readonly',
    type: 'Boolean',
    description: 'readonly: true 시 편집없이 지정만 가능',
    default: 'false',
    required: false,
  },
  {
    name: 'border',
    type: 'Boolean',
    description: 'Rate icon의 테두리 표시 설정',
    default: 'false',
    required: false,
  },
]

export const sliderProps = [
  {
    name: 'trackType',
    type: 'thin | normal | fat',
    description: '슬라이더 트랙의 폭(두께)을 지정',
    default: 'normal',
    required: false,
  },
  {
    name: 'min',
    type: 'Number',
    description: 'slider의 최소값 지정',
    default: '0',
    required: false,
  },
  {
    name: 'max',
    type: 'Number',
    description: 'slider의 최대값 지정',
    default: '100',
    required: false,
  },
  {
    name: 'unitText',
    type: 'String',
    description: 'slider 값의 단위의 표시 설정',
    default: '',
    required: false,
  },
  {
    name: 'showStep',
    type: 'Boolean',
    description: 'step 사용 설정',
    default: '',
    required: false,
  },
  {
    name: 'stepSize',
    type: 'Number',
    description: 'step 분할 수 지정. ',
    default: '10',
    required: false,
  },
  {
    name: 'showLabel',
    type: 'Boolean',
    description: '레이블(최소값, 최대값) 표시 설정 ',
    default: 'false',
    required: false,
  },
  {
    name: 'showValue',
    type: 'Boolean',
    description: '레이블(현재값) 표시 설정 ',
    default: 'false',
    required: false,
  },
  {
    name: 'showTooltip',
    type: 'Boolean',
    description: '툴팁(현재값) 표시 설정 ',
    default: 'false',
    required: false,
  },
  {
    name: 'titleText',
    type: 'String',
    description: 'slider 제목 지정 ',
    default: '',
    required: false,
  },
  globalProps.color,
  globalProps.disabled,
]

export const segmentProps = [
  {
    name: 'surface',
    type: 'Boolean',
    description: '지정된 배경색 설정',
    default: 'false',
    required: false,
  },
  {
    name: 'float',
    type: 'Boolean',
    description: 'shadow를 이용한 elevation 설정',
    default: 'false',
    required: false,
  },
  {
    name: 'round',
    type: 's | m | l | xl',
    description: '둥근 코너의 크기 지정',
    default: 'l',
    required: false,
  },
  globalProps.align,
  globalProps.border,
  {
    name: 'attached',
    type: 'Array[header | footer]',
    description: 'header, footer 사용 설정',
    default: 'null',
    required: false,
  },
  {
    name: 'collapse',
    type: 'Boolean',
    description: 'collapse 기능 사용 설정',
    default: 'false',
    required: false,
  },
]
export const cardProps = [
  {
    name: 'title',
    type: 'String',
    description: 'Card 제목 지정',
    default: '',
    required: false,
  },
  {
    name: 'surface',
    type: 'Boolean',
    description: '지정된 배경색 설정',
    default: 'false',
    required: false,
  },
  {
    name: 'float',
    type: 'Boolean',
    description: 'shadow를 이용한 elevation 설정',
    default: 'false',
    required: false,
  },
  {
    name: 'round',
    type: 's | m | l | xl',
    description: '둥근 코너의 크기 지정',
    default: 'l',
    required: false,
  },
  globalProps.align,
  globalProps.border,
  {
    name: 'image',
    type: 'Boolean | Object',
    description: 'ImageCard의 이미지 설정',
    default: 'null',
    required: false,
  },
  {
    name: 'extra',
    type: 'Boolean',
    description: 'extra slot 영역 사용 설정',
    default: 'null',
    required: false,
  },
  {
    name: 'attached',
    type: 'Array[header | footer]',
    description: 'header, footer 사용 설정',
    default: 'null',
    required: false,
  },
]
export const tableProps = [
  {
    name: 'columns',
    type: 'Array',
    description: 'Table column 정보 목록',
    default: 'null',
    required: true,
  },
  {
    name: 'values',
    type: 'Array',
    description: 'Table values 목록',
    default: 'null',
    required: true,
  },
  {
    name: 'headerAlign',
    type: 'left | center | right',
    description: 'header 컬럼의 텍스트 정렬 지정',
    default: 'center',
    required: false,
  },
  globalProps.border,
  {
    name: 'gridType',
    type: 'widths | divide',
    description: '컬럼 width 타입 지정 ',
    default: 'widths',
    required: false,
  },
  {
    name: 'divideNum',
    type: 'String | Number',
    description: 'divide 타입일때 컬럼 분할 값 지정 ',
    default: '3',
    required: false,
  },
  {
    name: 'selection',
    type: 'Boolean',
    description: 'row 선택 또는 지정 표시 설정',
    default: 'false',
    required: false,
  },
  {
    name: 'striped',
    type: 'odd | even',
    description: 'row 스트라이프 스타일 지정',
    default: 'false',
    required: false,
  },
]
export const panelProps = [
  {
    name: 'title',
    type: 'String',
    description: 'Panel의 제목 지정',
    default: '',
    required: true,
  },
  {
    name: 'contents',
    type: 'String',
    description: 'Panel의 내용 지정',
    default: '',
    required: true,
  },
  globalProps.border,
  {
    name: 'toggleIcon',
    type: 'String',
    description: 'title영역에 표시 될 아이콘 사용 설정 및 아이콘 지정',
    default: '',
    required: false,
  },
  {
    name: 'iconPos',
    type: 'String',
    description: '아이콘 표시 위치 지정',
    default: 'left',
    required: false,
  },
  {
    name: 'open',
    type: 'Boolean',
    description: 'contents영역의 상태 지정',
    default: 'false',
    required: false,
  },
  {
    name: 'collapse',
    type: 'Boolean',
    description: 'contents영역의 collapse 사용 지정',
    default: 'false',
    required: false,
  },
  {
    name: 'maxHeight',
    type: 'Number',
    description: 'collapse 적용 시 최대 heaght값 지정',
    default: '200',
    required: false,
  },
]
export const listProps = [
  {
    name: 'options',
    type: 'Array',
    description: '목록 정보(내용, 이미지, 아이콘) 배열',
    default: '',
    required: true,
  },
  {
    name: 'selection',
    type: 'Boolean',
    description: '선택 (click, hover) 기능 설정',
    default: '',
    required: false,
  },
  {
    name: 'selectedType',
    type: 'String',
    description: '선택 표시 타입을 지정 (예> bg, text, bg text, mark)',
    default: 'bg',
    required: false,
  },
  {
    name: 'icon',
    type: 'Boolean',
    description: '목록에 아이콘 표시 설정',
    default: 'false',
    required: false,
  },
  {
    name: 'image',
    type: 'Boolean',
    description: '목록에 이미지 표시 설정',
    default: 'false',
    required: false,
  },
  globalProps.border,
]
export const treeListProps = [
  {
    name: 'treeData',
    type: 'Array',
    description: '트리 목록 정보(제목, 자식 목록) 배열',
    default: '[]',
    required: true,
  },
  {
    name: 'userClass',
    type: 'String',
    description: '사용자 정의 클래스명 지정',
    default: '',
    required: false,
  },
  {
    name: 'useCheck',
    type: 'Boolean',
    description: '목록 체크 기능 설정',
    default: 'false',
    required: false,
  },
  {
    name: 'useMark',
    type: 'Boolean',
    description: '목록 collapse 상태 표시 설정',
    default: 'true',
    required: false,
  },
]
export const treeNodeProps = [
  {
    name: 'node',
    type: 'Object',
    description: '트리 노드 정보(제목, 자식 목록)',
    default: '{}',
    required: true,
  },
  {
    name: 'level',
    type: 'Number',
    description: '현재 노드의 계증 정보',
    default: '0',
    required: false,
  },
  {
    name: 'useCheck',
    type: 'Boolean',
    description: '목록 체크 기능 설정. treeList로 부터 상속',
    default: 'false',
    required: false,
  },
  {
    name: 'useMark',
    type: 'Boolean',
    description: '목록 collapse 상태 표시 설정. treeList로 부터 상속',
    default: 'true',
    required: false,
  },
  {
    name: 'check',
    type: 'Boolean',
    description: 'useCheck: true 시 check 여부 설정',
    default: 'false',
    required: false,
  },
]
export const calendarProps = [
  {
    name: 'selectedDate',
    type: 'String | Dater',
    description: '초기 표시 날짜, 선택한 날짜',
    default: 'new Date()',
    required: false,
  },
  {
    name: 'cellSize',
    type: 'String',
    description: '날짜 표시 영역 크기. ratio: 1',
    default: '37px',
    required: false,
  },
  globalProps.border,
  {
    name: 'symmetry',
    type: 'Boolean',
    description: '해더 버튼 배치 타입 설정',
    default: 'false',
    required: false,
  },
  {
    name: 'today',
    type: 'Boolean',
    description: '오늘 날짜 바로가기 버튼 사용 설정',
    default: 'false',
    required: false,
  },
]
export const paginationProps = [
  {
    name: 'type',
    type: 'number | page',
    description: '페이지네이션 타입 지정',
    default: 'number',
    required: false,
  },
  {
    name: 'pageLength',
    type: 'Number',
    description: '전체 페이지 수 지정',
    default: '1',
    required: false,
  },
  {
    name: 'currentPage',
    type: 'Number',
    description: '초기 및 현재 페이지 지정',
    default: '1',
    required: false,
  },
  {
    name: 'round',
    type: 'Boolean',
    description: '페이지 버튼에 동근 모서리 적용 설정',
    default: 'false',
    required: false,
  },
  {
    name: 'border',
    type: 'Boolean',
    description: '페이지 버튼에 테두리 적용 설정',
    default: 'false',
    required: false,
  },
  globalProps.compact,
  globalProps.align,
  {
    name: 'limits',
    type: 'Number',
    description: '최대 페이지 표시 수 설정. 0일떼 제한없음',
    default: '0',
    required: false,
  },
  {
    name: 'itemClass',
    type: 'String',
    description: '페이지 버튼에 지정할 사용자 정의 클래스명',
    default: '',
    required: false,
  },
  {
    name: 'ellipsis',
    type: 'Boolean',
    description: '체이지 축약 타입 지정',
    default: 'false',
    required: false,
  },
  globalProps.color,
]
export const selectboxProps = [
  {
    name: 'options',
    type: 'Array',
    description: '옵션 목록 배열',
    default: '[]',
    required: true,
  },
  {
    name: 'selectedValue',
    type: 'Array | Object | String',
    description: '초기 및 선택된 옵션 지정',
    default: 'null',
    required: false,
  },
  {
    name: 'boxType',
    type: 'dropdown | float',
    description: '옵션 메뉴 타입 지정',
    default: 'dropdown',
    required: false,
  },
  {
    name: 'placeholder',
    type: 'String',
    description: 'placeholder 지정',
    default: '선택하세요',
    required: false,
  },
  {
    name: 'isSearch',
    type: 'Boolean',
    description: '옵션 선택 기능 사용 설정',
    default: 'false',
    required: false,
  },
  {
    name: 'useIcon',
    type: 'Boolean',
    description: '옵션에 아이콘을 함꼐 표시할지 설정',
    default: 'false',
    required: false,
  },
  {
    name: 'multiple',
    type: 'Boolean',
    description: '다중 선택 기능 사용 설정',
    default: 'false',
    required: false,
  },
  {
    name: 'maxOptHeight',
    type: 'Number',
    description: '옵션 메뉴 최대 height 지정 설정',
    default: 'false',
    required: false,
  },
  {
    name: 'selectedType',
    type: 'String',
    description: '선택 옵션 표시 지정. BeList 참고',
    default: 'bg',
    required: false,
  },
  {
    name: 'optionKey',
    type: 'String',
    description: 'options의 옵션 키 설정',
    default: 'option',
    required: false,
  },
  {
    name: 'resultKey',
    type: 'String',
    description: '선택된 옵션의 결과값 키 설정',
    default: 'val',
    required: false,
  },
  {
    name: 'isAll',
    type: 'Boolean',
    description: 'multiple: true 시 전체 선택 사용 설정2',
    default: 'false',
    required: false,
  },
  globalProps.fluid,
  globalProps.disabled,
]
export const tabsProps = [
  {
    name: 'tabList',
    type: 'Array',
    description: '탭 메뉴 목록',
    default: '',
    required: true,
  },
  {
    name: 'vertical',
    type: 'Boolean',
    description: '세로 모드 설정',
    default: 'false',
    required: false,
  },
  {
    name: 'tabType',
    type: 'none | line | button | browser',
    description: '탭 메뉴 스타일 지정',
    default: '',
    required: false,
  },
]
